apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ansible-eda-template
objects:
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: ansible-eda
      namespace: ${NAMESPACE}
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: Role
    metadata:
      name: ansible-eda
      namespace: ${NAMESPACE}
    rules:
      - apiGroups: ["apps"]
        resources: ["pods", "deployments", "services", "jobs"]
        # You'd think list, get, and watch would be sufficient, but it seems not!
        verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
      - apiGroups: [""]
        resources: ["configmaps", "secrets"]
        # You'd think list, get, and watch would be sufficient, but it seems not!
        verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: RoleBinding
    metadata:
      name: ansible-eda
      namespace: ${NAMESPACE}
    roleRef:
      kind: Role
      name: ansible-eda
      apiGroup: rbac.authorization.k8s.io
    subjects:
      - kind: ServiceAccount
        name: ansible-eda
        namespace: ${NAMESPACE}
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app.kubernetes.io/name: ansible-eda
        app.kubernetes.io/version: 1.0.0
      name: ansibleeda
      namespace: ${NAMESPACE}
    spec:
      ports:
        - name: http
          port: 5001
          protocol: TCP
          targetPort: 5001
      selector:
        app.kubernetes.io/name: ansible-eda
        app.kubernetes.io/version: 1.0.0
      type: ClusterIP
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/version: 1.0.0
        app.kubernetes.io/name: ansible-eda
      name: ansible-eda
      namespace: ${NAMESPACE}
    spec:
      replicas: 1
      selector:
        matchLabels:
          app.kubernetes.io/version: 1.0.0
          app.kubernetes.io/name: ansible-eda
      template:
        metadata:
          labels:
            app.kubernetes.io/version: 1.0.0
            app.kubernetes.io/name: ansible-eda
        spec:
          serviceAccountName: ansible-eda
          containers:
            - env:
                - name: WATCHED_NS
                  value: ${WATCHED_NS}
                - name: SLACK_TOKEN
                  value: ${SLACK_TOKEN}
                - name: KUBERNETES_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
              image: quay.io/rhdevelopers/k8s-ansible-eda:slack
              imagePullPolicy: Always
              name: ansible-eda
              resources:
                requests:
                  cpu: 250m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 512Mi
              ports:
                - containerPort: 5001
                  name: http
                  protocol: TCP
parameters:
  - name: NAMESPACE
    required: true
  - name: SLACK_TOKEN
    required: true
  - name: WATCHED_NS
    required: true
